#include <bits/stdc++.h>

using namespace std;

//
// 1) Имеется набор данных, состоящий из пар положительных целых чисел.
// Необходимо выбрать из каждой пары ровно одно число так, чтобы сумма всех выбранных чисел
// не делилась на 3 и при этом была минимально возможной. Гарантируется, что искомую сумму
// получить можно. Программа должна напечатать одно число – минимально возможную сумму,
// соответствующую условиям задачи.
//
// Входные данные: Даны два входных файла: файл A (27-1a.txt) и файл B (27-1b.txt),
// каждый из которых содержит в первой строке количество пар N (1 ≤ N ≤ 100000).
// Каждая из следующих N строк содержит два натуральных числа, не превышающих 10 000.
//

int ans(string fileName){
    ifstream in(fileName);
    int n;
    in>>n;
    vector<int>s(2);
    in>>s[0]>>s[1];
    for(int i=0;i<n-1;++i){
        vector<int>buf(2);
        in>>buf[0]>>buf[1];
        vector<int> cmb;
        for(auto a:s){
            for(auto b:buf){
                cmb.push_back(a+b);
            }
        }
        vector<int>s1(3,999999999);
        for(auto x:cmb){
            s1[x%3]=min(s1[x%3],x);
        }
        s=vector<int>();
        for(auto x:s1){
            if(x!=0)
                s.push_back(x);
        }
    }
    int m=999999999;
    for(auto x:s){
        if(x%3!=0){
            m=min(m,x);
        }
    }
    return m;
}

int main() {
    cout<<ans("27-1a.txt")<<' '<<ans("27-1b.txt");
    return 0;
}
