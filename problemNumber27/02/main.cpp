#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

//    Задача номер 2
//    Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой пары 
//    ровно одно число так, чтобы сумма всех выбранных чисел делилась на 3 и при этом была максимально 
//    возможной. Гарантируется, что искомую сумму получить можно. 
//    Программа должна напечатать одно число – максимально возможную сумму, соответствующую условиям задачи.
//    Входные данные: 
//    Даны два входных файла: файл A (27-2a.txt) и файл B (27-2b.txt), каждый из которых содержит 
//    в первой строке количество пар N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит 
//    два натуральных числа, не превышающих 10 000.
//    Пример входного файла:
//    6
//    1 3
//    5 11
//    6 9
//    5 4
//    3 3
//    1 1
//    Для указанных входных данных значением искомой суммы должно быть число 30.
//    В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.



ll ans(string fileName){
	ifstream in(fileName);
	ll ans=0;
	ll n;
	in>>n;
	vector<ll> s(2,0);
	in>>s[0]>>s[1];
	for(ll i=0;i<n;i++){
		vector<ll>s1(2);
		in>>s1[0]>>s1[1];
		vector<ll> cmb;
		for(auto a:s1){
			for(auto b:s){
				cmb.push_back(a+b);
			}
		}	
		s1=vector<ll>(3,0);
		for(auto x:cmb){
			if(x!=0){
				s1[x%3]=max(s1[x%3],x);
			}
		}
		s=vector<ll>();
		for(auto x:s1){
			if(x!=0)s.push_back(x);
		}
	}
	for(auto x:s){
		if(x%3==0)ans=x;
	}
	in.close();
	return ans;
}



int main(){
	cout<<ans("27-2a.txt")<<'\t'<<ans("27-2b.txt")<<'\n';
	return 0;
}


